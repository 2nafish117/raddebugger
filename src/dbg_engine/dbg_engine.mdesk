// Copyright (c) 2024 Epic Games Tools
// Licensed under the MIT license (https://opensource.org/license/mit/)

////////////////////////////////
//~ rjf: Config Sources

@table(string, name, load_cmd, write_cmd, apply_cmd)
D_CfgSrcTable:
{
  {"user"            User             OpenUser       WriteUserData       ApplyUserData    }
  {"project"         Project          OpenProject    WriteProjectData    ApplyProjectData }
  {"command_line"    CommandLine      Null           Null                Null             }
  {"transient"       Transient        Null           Null                Null             }
}

@enum D_CfgSrc:
{
  @expand(D_CfgSrcTable a) `$(a.name)`,
  COUNT,
}

@data(String8) d_cfg_src_string_table:
{
  @expand(D_CfgSrcTable a) `str8_lit_comp("$(a.string)")`,
}

////////////////////////////////
//~ rjf: Entity Kind Tables

@table(name          name_lower            name_lower_plural             op_delete  op_freeze  op_edit  op_rename  op_enable  op_cond  op_dup  name_is_code  name_is_path  user_lifetime  is_serialized  name_label   icon_kind  display_string)
//                                                                       |                                                                                                                                                                     |
//                                                                       |                                _____________________________________________________________________________________________________________________________________/
//                                                                       |                               /
//                                                                        operations________  names lt sz
//                                                                       /..................\ /...\ |  |
//                                                                       dl fz ed rn en cn dp nc np ul iz
D_EntityKindTable:
{
  {Nil                nil                   nils                          0  0  0  0  0  0  0  0  0  0  0                      "Label"             Null                   "Nil"                        }
  {Root               root                  roots                         0  0  0  0  0  0  0  0  0  0  0                      "Label"             Null                   "Root"                       }
  
  //- rjf: machines
  {Machine            machine               machines                      0  1  0  1  0  0  0  0  0  0  0                      "Label"             Machine                "Machine"                    }
  
  //- rjf: filesystem modeling
  {File               file                  files                         0  0  0  0  0  0  0  0  0  0  0                      "Label"             FileOutline            "File"                       }
  
  //- rjf: auto view rules
  {AutoViewRule       auto_view_rule        auto_view_rules               0  0  0  0  0  0  0  0  0  1  1                      "Label"             Binoculars             "Auto View Rule"             }
  
  //- rjf: file path maps
  {FilePathMap        file_path_map         file_path_maps                0  0  0  0  0  0  0  0  0  0  1                      "Label"             FileOutline            "File Path Map"              }
  
  //- rjf: watch pins
  {WatchPin           watch_pin             watch_pins                    1  0  0  1  0  0  1  1  0  1  1                      "Expression"        Pin                    "Watch Pin"                  }
  
  //- rjf: watches
  {Watch              watch                 watches                       1  0  0  1  1  0  1  1  0  1  1                      "Expression"        Binoculars             "Watch"                      }
  {ViewRule           view_rule             view_rules                    1  0  0  1  1  0  1  1  0  1  0                      "Expression"        Binoculars             "View Rule"                  }
  
  //- rjf: breakpoints
  {Breakpoint         breakpoint            breakpoints                   1  0  0  1  1  1  1  0  0  1  1                      "Label"             CircleFilled           "Breakpoint"                 }
  {Condition          condition             conditions                    0  0  0  0  0  0  0  1  0  1  0                      "Expression"        CircleFilled           "Condition"                  }
  
  //- rjf: user-controlled locations (source, addresses, symbol names)
  {Location           location              locations                     0  0  0  0  0  0  0  1  1  1  0                      "Location"          Null                   "Location"                   }
  
  //- rjf: targets
  {Target             target                targets                       1  0  1  1  1  0  1  0  0  1  1                      "Label"             Target                 "Target"                     }
  {Executable         executable            executables                   0  0  0  0  0  0  0  0  1  1  0                      "Executable"        Null                   "Executable"                 }
  {Arguments          arguments             argumentses                   0  0  0  0  0  0  0  0  0  1  0                      "Arguments"         Null                   "Arguments"                  }
  {WorkingDirectory   working_directory     working_directories           0  0  0  0  0  0  0  0  1  1  0                      "Execution Path"    Null                   "Working Directory"          }
  {EntryPoint         entry_point           entry_points                  0  0  0  0  0  0  0  0  0  1  0                      "Symbol Name"       Null                   "Entry Point"                }
  
  //- rjf: frontend containers (windows, panels, views)
  {Window             window                windows                       1  0  0  0  0  0  1  0  0  1  1                      "Label"             Window                 "Window"                     }
  {Panel              panel                 panels                        1  0  0  0  0  0  1  0  0  1  1                      "Label"             XSplit                 "Panel"                      }
  {View               view                  views                         1  0  0  0  0  0  1  0  0  1  1                      "Label"             Null                   "View"                       }
  
  //- rjf: recent projects
  {RecentProject      recent_project        recent_projects               0  0  0  0  0  0  0  0  1  0  1                      "Path"              Briefcase              "Recent Project"             }
  
  //- rjf: src -> dst mapping
  {Source             source                sources                       0  0  0  0  0  0  0  0  0  0  0                      "Path"              Null                   "Source"                     }
  {Dest               dest                  dests                         0  0  0  0  0  0  0  0  0  0  0                      "Path"              Null                   "Destination"                }
  
  //- rjf: control system entities
  {Process            process               processes                     0  1  0  1  0  0  0  0  0  0  0                      "Label"             Threads                "Process"                    }
  {Thread             thread                threads                       0  1  0  1  0  0  0  0  0  0  0                      "Label"             Thread                 "Thread"                     }
  {Module             module                modules                       0  0  0  0  0  0  0  0  0  0  0                      "Label"             Module                 "Module"                     }
  {PendingThreadName  pending_thread_name   pending_thread_names          0  0  0  0  0  0  0  0  0  0  0                      "Label"             Threads                "Pending Thread Name"        }
  {DebugInfoPath      debug_info_path       debug_info_paths              0  0  0  0  0  0  0  0  0  0  0                      "Label"             Module                 "Debug Info Path"            }
  
  //- rjf: parser task entities
  {ConversionTask     conversion_task       conversion_tasks              0  0  0  1  0  0  0  0  0  0  0                      "Label"             Null                   "Conversion Task"            }
  {ConversionFail     conversion_fail       conversion_fails              0  0  0  1  0  0  0  0  0  0  0                      "Label"             Null                   "Conversion Failure"         }
}

@enum D_EntityKind:
{
  @expand(D_EntityKindTable a) `$(a.name)`,
  COUNT,
}

@data(String8) d_entity_kind_display_string_table:
{
  @expand(D_EntityKindTable a) `str8_lit_comp("$(a.display_string)")`,
}

@data(String8) d_entity_kind_name_lower_table:
{
  @expand(D_EntityKindTable a) `str8_lit_comp("$(a.name_lower)")`,
}

@data(String8) d_entity_kind_name_lower_plural_table:
{
  @expand(D_EntityKindTable a) `str8_lit_comp("$(a.name_lower_plural)")`,
}

@data(String8) d_entity_kind_name_label_table:
{
  @expand(D_EntityKindTable a) `str8_lit_comp("$(a.name_label)")`,
}

@data(D_EntityKindFlags) d_entity_kind_flags_table:
{
  @expand(D_EntityKindTable a) `($(a.op_delete)*D_EntityKindFlag_CanDelete) | ($(a.op_freeze)*D_EntityKindFlag_CanFreeze) | ($(a.op_edit)*D_EntityKindFlag_CanEdit) | ($(a.op_rename)*D_EntityKindFlag_CanRename) | ($(a.op_enable)*D_EntityKindFlag_CanEnable) | ($(a.op_cond)*D_EntityKindFlag_CanCondition) | ($(a.op_dup)*D_EntityKindFlag_CanDuplicate) | ($(a.name_is_code)*D_EntityKindFlag_NameIsCode) | ($(a.name_is_path)*D_EntityKindFlag_NameIsPath) | ($(a.user_lifetime)*D_EntityKindFlag_UserDefinedLifetime) | ($(a.is_serialized)*D_EntityKindFlag_IsSerializedToConfig)`,
}

////////////////////////////////
//~ rjf: Registers Type Table

@table(c_type  name_lower  name)
D_RegTable:
{
  // rjf: entity slots
  {D_Handle         machine          Machine       }
  {D_Handle         module           Module        }
  {D_Handle         process          Process       }
  {D_Handle         thread           Thread        }
  {D_Handle         window           Window        }
  {D_Handle         panel            Panel         }
  {D_Handle         view             View          }
  {D_Handle         prev_view        PrevView      }
  {D_Handle         dst_panel        DstPanel      }
  {D_Handle         entity           Entity        }
  {D_HandleList     entity_list      EntityList    }
  
  // rjf: frame selection
  {U64              unwind_count     UnwindCount   }
  {U64              inline_depth     InlineDepth   }
  
  // rjf: code / address location info
  {String8          file_path        FilePath      }
  {TxtPt            cursor           Cursor        }
  {TxtPt            mark             Mark          }
  {U128             text_key         TextKey       }
  {TXT_LangKind     lang_kind        LangKind      }
  {D_LineList       lines            Lines         }
  {DI_Key           dbgi_key         DbgiKey       }
  {Rng1U64          vaddr_range      VaddrRange    }
  {Rng1U64          voff_range       VoffRange     }
  
  // rjf: general parameters
  {U32              pid              PID           }
  {B32              force_confirm    ForceConfirm  }
  {B32              prefer_disasm    PreferDisasm  }
  {Dir2             dir2             Dir2          }
  {String8          string           String        }
  {`MD_Node *`      params_tree      ParamsTree    }
}

@enum D_RegSlot:
{
  Null,
  @expand(D_RegTable a) `$(a.name)`,
  COUNT,
}

@struct D_Regs:
{
  @expand(D_RegTable a) `$(a.c_type) $(a.name_lower)`
}

@data(Rng1U64) d_reg_slot_range_table:
{
  `{0}`,
  @expand(D_RegTable a) `{OffsetOf(D_Regs, $(a.name_lower)), OffsetOf(D_Regs, $(a.name_lower)) + sizeof($(a.c_type))}`
}

@gen
{
  `#define d_regs_lit_init_top \\`
  @expand(D_RegTable a) `.$(a.name_lower) = d_regs()->$(a.name_lower),\\`
    ``;
}

////////////////////////////////
//~ rjf: Built-In Command Tables

@table(name, name_lower, c_type)
D_CmdParamSlotTable:
{
  {Window            window                `D_Handle`}
  {Panel             panel                 `D_Handle`}
  {DestPanel         dest_panel            `D_Handle`}
  {PrevView          prev_view             `D_Handle`}
  {View              view                  `D_Handle`}
  {Entity            entity                `D_Handle`}
  {EntityList        entity_list           `D_HandleList`}
  {String            string                `String8`}
  {FilePath          file_path             `String8`}
  {TextPoint         text_point            `TxtPt`}
  {ParamsTree        params_tree           `MD_Node *`}
  {OSEvent           os_event              `struct OS_Event *`}
  {VirtualAddr       vaddr                 `U64`}
  {VirtualOff        voff                  `U64`}
  {Index             index                 `U64`}
  {ID                id                    `U64`}
  {PreferDisassembly prefer_dasm           `B32`}
  {ForceConfirm      force_confirm         `B32`}
  {Dir2              dir2                  `Dir2`}
  {UnwindIndex       unwind_index          `U64`}
  {InlineDepth       inline_depth          `U64`}
}

@table(name                      ui_vis   ipc_docs_vis   q_slot       q_view  q_ent_kind  q_allow_files q_allow_folders  q_keep_oi   q_select_oi  q_is_code  q_required           canonical_icon        string                        display_name                                  desc                                                                                                               search_tags                      )
//    /                          |        |              |             \___                                                       ____________________________________/           |                     |                             |                                             |                                                                                                                  |
//   /                           |        |              |                 \                                                     /                                                |                     |                             |                                             |                                                                                                                  |
D_CmdTable:     //               |        |              |                  |                                                   |                                                 |                     |                             |                                             |                                                                                                                  |
{
  //- rjf: low-level target control operations
  {LaunchAndRun                   1        1              EntityList         null              Target             0  0  0  0  0  1                                                           Play                  "launch_and_run"              "Launch and Run"                              "Starts debugging a new instance of a target, then runs."                                                          "launch,start,run,target"        }
  {LaunchAndInit                  1        1              EntityList         null              Target             0  0  0  0  0  1                                                           PlayStepForward       "launch_and_init"             "Launch and Initialize"                       "Starts debugging a new instance of a target, then stops at the program's entry point."                            "launch,start,entry,point"       }
  {Kill                           1        1              EntityList         null              Process            0  0  0  0  0  1                                                           Stop                  "kill"                        "Kill"                                        "Kills the specified existing debugged process(es)."                                                               "stop,kill"                      }
  {KillAll                        1        1              Null               null              Nil                0  0  0  0  0  0                                                           Stop                  "kill_all"                    "Kill All"                                    "Kills all debugged child processes."                                                                              "stop,kill,all"                  }
  {Detach                         1        1              EntityList         null              Process            0  0  0  0  0  1                                                           Null                  "detach"                      "Detach"                                      "Detaches the specified debugged process."                                                                         "detach"                         }
  {Continue                       1        1              Null               null              Nil                0  0  0  0  0  0                                                           Play                  "continue"                    "Continue"                                    "Continues all halted threads."                                                                                    ""                               }
  {StepIntoInst                   1        1              Null               null              Nil                0  0  0  0  0  0                                                           StepInto              "step_into_inst"              "Step Into (Assembly)"                        "Performs a step that goes into calls, at the instruction level."                                                  "single,step,thread"             }
  {StepOverInst                   1        1              Null               null              Nil                0  0  0  0  0  0                                                           StepOver              "step_over_inst"              "Step Over (Assembly)"                        "Performs a step that skips calls, at the instruction level."                                                      "single,step,thread"             }
  {StepIntoLine                   1        1              Null               null              Nil                0  0  0  0  0  0                                                           StepInto              "step_into_line"              "Step Into (Line)"                            "Performs a step that goes into calls, at the source code line level."                                             "step,thread"                    }
  {StepOverLine                   1        1              Null               null              Nil                0  0  0  0  0  0                                                           StepOver              "step_over_line"              "Step Over (Line)"                            "Performs a step that skips calls, at the source code line level."                                                 "step,thread"                    }
  {StepOut                        1        1              Null               null              Nil                0  0  0  0  0  0                                                           StepOut               "step_out"                    "Step Out"                                    "Runs to the end of the current function and exits it."                                                            ""                               }
  {Halt                           1        1              Null               null              Nil                0  0  0  0  0  0                                                           Pause                 "halt"                        "Halt"                                        "Halts all running processes."                                                                                     "pause"                          }
  {SoftHaltRefresh                1        1              Null               null              Nil                0  0  0  0  0  0                                                           Refresh               "soft_halt_refresh"           "Soft Halt Refresh"                           "Interrupts all running processes to collect data, and then resumes them."                                         ""                               }
  {SetThreadIP                    0        1              Vaddr              null              Nil                0  0  0  0  1  1                                                           Null                  "set_thread_ip"               "Set Thread IP"                               "Sets the passed thread's instruction pointer at the passed address."                                              ""                               }
  
  //- rjf: high-level composite target control operations
  {RunToLine                      0        1              Null               null              Nil                0  0  0  0  0  0                                                           Play                  "run_to_line"                 "Run To Line"                                 "Runs until a particular source line is hit."                                                                      ""                               }
  {RunToAddress                   1        1              Vaddr              null              Nil                0  0  0  0  1  1                                                           PlayStepForward       "run_to_address"              "Run To Address"                              "Runs until a particular address is hit."                                                                          ""                               }
  {Run                            1        1              Null               null              Nil                0  0  0  0  0  0                                                           Play                  "run"                         "Run"                                         "Runs all targets after starting them if they have not been started yet."                                          "play"                           }
  {Restart                        1        1              Null               null              Nil                0  0  0  0  0  0                                                           Redo                  "restart"                     "Restart"                                     "Kills all running processes, then restarts the targets which were used to launch all current processes (if any)." "restart,retry"                  }
  {StepInto                       1        1              Null               null              Nil                0  0  0  0  0  0                                                           StepInto              "step_into"                   "Step Into"                                   "Steps once, possibly into function calls, for either line or instructions."                                       ""                               }
  {StepOver                       1        1              Null               null              Nil                0  0  0  0  0  0                                                           StepOver              "step_over"                   "Step Over"                                   "Steps once, always over function calls, for either line or instructions."                                         ""                               }
  {RunToCursor                    1        1              Null               null              Nil                0  0  0  0  0  0                                                           Play                  "run_to_cursor"               "Run To Cursor"                               "Runs the selected thread to the current cursor."                                                                  "line"                           }
  {SetNextStatement               1        1              Null               null              Nil                0  0  0  0  0  0                                                           RightArrow            "set_next_statement"          "Set Next Statement"                          "Sets the selected thread's instruction pointer to the cursor's position."                                         ""                               }
  
  //- rjf: debug control context management operations
  {SelectThread                   1        1              Entity             null              Thread             0  0  0  0  0  1                                                           Null                  "select_thread"               "Select Thread"                               "Selects a thread."                                                                                                ""                               }
  {SelectUnwind                   0        1              Null               null              Nil                0  0  0  0  0  0                                                           Null                  "select_unwind"               "Select Unwind"                               "Selects an unwind frame number for the selected thread."                                                          ""                               }
  {UpOneFrame                     1        1              Null               null              Nil                0  0  0  0  0  0                                                           UpArrow               "up_one_frame"                "Up One Frame"                                "Selects the call stack frame above the currently selected."                                                       ""                               }
  {DownOneFrame                   1        1              Null               null              Nil                0  0  0  0  0  0                                                           DownArrow             "down_one_frame"              "Down One Frame"                              "Selects the call stack frame below the currently selected."                                                       "callstack,unwind"               }
  {FreezeThread                   1        1              Entity             null              Thread             0  0  0  0  0  1                                                           Locked                "freeze_thread"               "Freeze Thread"                               "Freezes the passed thread."                                                                                       "callstack,unwind"               }
  {ThawThread                     1        1              Entity             null              Thread             0  0  0  0  0  1                                                           Unlocked              "thaw_thread"                 "Thaw Thread"                                 "Thaws the passed thread."                                                                                         ""                               }
  {FreezeProcess                  1        1              Entity             null              Process            0  0  0  0  0  1                                                           Locked                "freeze_process"              "Freeze Process"                              "Freezes the passed process."                                                                                      ""                               }
  {ThawProcess                    1        1              Entity             null              Process            0  0  0  0  0  1                                                           Unlocked              "thaw_process"                "Thaw Process"                                "Thaws the passed process."                                                                                        ""                               }
  {FreezeMachine                  0        1              Entity             null              Machine            0  0  0  0  0  1                                                           Locked                "freeze_machine"              "Freeze Machine"                              "Freezes the passed machine."                                                                                      ""                               }
  {ThawMachine                    0        1              Entity             null              Machine            0  0  0  0  0  1                                                           Unlocked              "thaw_machine"                "Thaw Machine"                                "Thaws the passed machine."                                                                                        ""                               }
  {FreezeLocalMachine             1        1              Null               null              Nil                0  0  0  0  0  0                                                           Machine               "freeze_local_machine"        "Freeze Local Machine"                        "Freezes the local machine."                                                                                       ""                               }
  {ThawLocalMachine               1        1              Null               null              Nil                0  0  0  0  0  0                                                           Machine               "thaw_local_machine"          "Thaw Local Machine"                          "Thaws the local machine."                                                                                         ""                               }
  {FreezeEntity                   0        0              Null               null              Nil                0  0  0  0  0  0                                                           Null                  "freeze_entity"               "Freeze Entity"                               "Freezes an entity."                                                                                               ""                               }
  {ThawEntity                     0        0              Null               null              Nil                0  0  0  0  0  0                                                           Null                  "thaw_entity"                 "Thaw Entity"                                 "Thaws an entity."                                                                                                 ""                               }
  
  //- rjf: attaching
  {Attach                         1        1              PID                null              Nil                0  0  0  0  0  1                                                           Null                  "attach"                      "Attach"                                      "Attaches to a process that is already running on the local machine."                                              ""                               }
}

@enum D_CmdKind:
{
  Null,
  @expand(D_CmdTable, a) `$(a.name)`,
  COUNT,
}

@enum D_CmdParamSlot:
{
  Null,
  @expand(D_CmdParamSlotTable a) `$(a.name)`,
  COUNT,
}

@struct D_CmdParams:
{
  @expand(D_CmdParamSlotTable a) `$(a.c_type) $(a.name_lower)`;
}

@data(Rng1U64) d_cmd_param_slot_range_table:
{
  `{0}`,
  @expand(D_CmdParamSlotTable a) `{OffsetOf(D_CmdParams, $(a.name_lower)), OffsetOf(D_CmdParams, $(a.name_lower)) + sizeof($(a.c_type))}`,
}

////////////////////////////////
//~ rjf: Built-In View Rules
//
// @view_rule_info
//
// NOTE(rjf): View rules are subtle in that they may impact any subset of the
// eval visualization pipeline. The "array" view rule, for example, functions
// by tweaking the type of an eval from `X *` to `X (*)[N]` (where N is
// computed from whatever expression is specified by the view rule). The "list"
// view rule, on the other hand, does not require any changes to the actual
// eval nor its type - instead, it follows an alternative path in constructing
// "viz blocks", and then constructing "viz rows" from those blocks. Compare
// these to the simpler 'dec', 'bin', or 'oct' rules, which simply tweak the
// radix used when stringizing numbers, which is something that only occurs in
// single-line eval stringization building.
//
// As such, each view rule specification has a mask, which determines which
// stages it may be used for. For a given view rule specification, if the bit
// corresponding to a particular eval stage is set, then that view rule spec-
// -ification also includes a hook which can be called from that stage.
//
// Below is a list of the stages in the eval visualization pipeline, as well as
// abbreviations which are used in the tables.
//
// expr resolution, "xp" -> provides a chance for a view rule to make
//                          modifications to expression trees that it is
//                          applied to
//
// viz block prod, "vb"  -> given a resolved eval, produce a list of non-
//                          windowed "viz blocks", which correspond to one or
//                          many contiguous rows in a watch-window-style UI.
//                          one level of expanded struct members, with no sub-
//                          expansions, would be one viz block. if one of those
//                          members - in the middle - were expanded too, then
//                          it would require three viz blocks - one for the
//                          members before the sub-expansion, one for the
//                          sub expansion members, and one for the members
//                          after, and so on. this is done recursively.
//
// viz row prod, "vr"    -> given a list of viz blocks, a windowed list of viz
//                          rows may be produced. each of these rows has info
//                          for building actual UI in e.g. a watch window -
//                          whether or not the row can be expanded, whether or
//                          not the row's value can be edited, what the edit-
//                          able string is for a row, what the display string
//                          is for a row, what the expression string is for a
//                          row, what the type is for a row, and so on.
//                          
// line stringize, "ls"  -> this is the stage used to produce display strings
//                          in the "viz row prod" stage, as well as basically
//                          any time UI needs to display the result of an eval
//                          in a single line. this also occurs recursively,
//                          descending into members & elements as needed,
//                          constrained by # of available pixels and font size
//                          and so on.
//
// row ui build, "ru"    -> finally, after the previous stages are completed,
//                          ui can finally be built according to all of the
//                          per-row information produced. this is the stage
//                          where view rules can insert their own arbitrary ui
//                          on a per-row basis.
//
// view ui build, "vu"   -> view rules which want to supply more sophisticated
//                          visualizers have the ability to provide full
//                          arbitrary UI hooks, which can either be produced
//                          in a minified form via watch views, or via a
//                          standalone tab.
//
// A few other bits are included for various ways in which a view rule may be
// applied throughout the eval visualization pipeline. A list follows:
//
// inherited, "ih"       -> is this view rule included, or not included, in
//                          child expansions?
//
// expandable, "ex"      -> does this view rule force the ability to expand
//                          an expression, even if traditional analysis of type
//                          info would not allow expansion?
//
// Not all of these stages are specified at this layer, however, since the
// "df_core" layer is for the non-graphical core debugger features. So the
// information pertaining to the eval visualization pipeline stages which
// do require graphical subsystems (e.g. UI, fonts, rendering) are specified
// in the "df_gfx" layer.
//
// For any view rules in this layer which also have graphical features, they
// are specified in both tables under the same name.

@table(coverage_check  name  name_lower  string          ih  ex  xp  vb                display_name                  docs    schema                                                         description)
D_ViewRuleTable:
{
  {x  Default    default     "default"                    -   -   -   x                 "Default"                     -       ""                                                             ""                                                                                                                                                                           }
  {x  Array      array       "array"                      -   -   x   -                 "Array"                       x       "x:{expr}"                                                     "Specifies that a pointer points to N elements, rather than only 1."                                                                                                         }
  {x  Slice      slice       "slice"                      -   -   x   -                 "Slice"                       x       ""                                                             "Specifies that a pointer within a struct, also containing an integer, points to the number of elements encoded by the integer."                                             }
  {-  List       list        "list"                       -   -   -   x                 "List"                        x       "x:{member}"                                                   "Specifies that some struct, union, or class forms the top of a linked list, and the member which points at the following element in the list."                              }
  {x  ByteSwap   bswap       "bswap"                      x   -   x   -                 "Byte Swap"                   x       ""                                                             "Specifies that all integral evaluations should be byte-swapped, such that their endianness is reversed."                                                                    }
  {x  Cast       cast        "cast"                       -   -   x   -                 "Cast"                        x       "x:{type}"                                                     "Specifies that the expression to which the view rule is applied should be casted to the provided type."                                                                     }
  {-  BaseDec    base_dec    "dec"                        x   -   -   -                 "Decimal Base (Base 10)"      x       ""                                                             "Specifies that all integral evaluations should appear in base-10 form."                                                                                                     }
  {-  BaseBin    base_bin    "bin"                        x   -   -   -                 "Binary Base (Base 2)"        x       ""                                                             "Specifies that all integral evaluations should appear in base-2 form."                                                                                                      }
  {-  BaseOct    base_oct    "oct"                        x   -   -   -                 "Octal Base (Base 8)"         x       ""                                                             "Specifies that all integral evaluations should appear in base-8 form."                                                                                                      }
  {-  BaseHex    base_hex    "hex"                        x   -   -   -                 "Hexadecimal Base (Base 16)"  x       ""                                                             "Specifies that all integral evaluations should appear in base-16 form."                                                                                                     }
  {-  Only       only        "only"                       x   -   -   x                 "Only Specified Members"      x       "x:{member}"                                                   "Specifies that only the specified members should appear in struct, union, or class evaluations."                                                                            }
  {-  Omit       omit        "omit"                       x   -   -   x                 "Omit Specified Members"      x       "x:{member}"                                                   "Omits a list of member names from appearing in struct, union, or class evaluations."                                                                                        }
  {-  NoAddr     no_addr     "no_addr"                    x   -   -   -                 "Disable Address Values"      x       ""                                                             "Displays only what pointers point to, if possible, without the pointer's address value."                                                                                    }
  {x  Checkbox   checkbox    "checkbox"                   -   -   -   -                 "Checkbox"                    x       ""                                                             "Displays simple integer values as checkboxes, encoding zero or nonzero values."                                                                                             }
  {-  ColorRGBA  color_rgba  "color_rgba"                 -   x   -   x                 "Color (RGBA)"                x       ""                                                             "Displays as a color, interpreting the data as encoding R, G, B, and A values."                                                                                              }
  {x  Text       text        "text"                       -   x   -   x                 "Text"                        x       "x:{'lang':lang, 'size':expr}"                                 "Displays as text."                                                                                                                                                          }
  {x  Disasm     disasm      "disasm"                     -   x   -   x                 "Disassembly"                 x       "x:{'arch':arch, 'size':expr}"                                 "Displays as disassembled instructions, interpreting the data as raw machine code."                                                                                          }
  {x  Memory     memory      "memory"                     -   x   -   x                 "Memory"                      x       "x:{'size':expr}"                                              "Displays as a raw memory grid."                                                                                                                                             }
  {-  Graph      graph       "graph"                      -   x   -   x                 "Graph"                       x       ""                                                             "Displays as a pointer graph, visualizing nodes and edges formed by pointers directly."                                                                                      }
  {x  Bitmap     bitmap      "bitmap"                     -   x   -   x                 "Bitmap"                      x       "x:{'w':expr, 'h':expr, 'fmt':tex2dformat}"                    "Displays as a bitmap, interpreting the data as raw pixel data."                                                                                                             }
  {-  Geo3D      geo3d       "geo3d"                      -   x   -   x                 "Geometry (3D)"               x       "x:{'count':expr, 'vtx':expr, 'vtx_size':expr}" "Displays as geometry, interpreting the data as index or vertex data."                                                                                                                      }
}

@enum D_ViewRuleKind:
{
  @expand(D_ViewRuleTable a) `$(a.name)`,
  COUNT,
}

@data(D_ViewRuleSpecInfo) @c_file d_core_view_rule_spec_info_table:
{
  @expand(D_ViewRuleTable a)
    ```{str8_lit_comp("$(a.string)"), str8_lit_comp("$(a.display_name)"), str8_lit_comp("$(a.schema)"), str8_lit_comp("$(a.description)"), (D_ViewRuleSpecInfoFlag_Inherited*$(a.ih == "x"))|(D_ViewRuleSpecInfoFlag_Expandable*$(a.ex == "x"))|(D_ViewRuleSpecInfoFlag_ExprResolution*$(a.xp == "x"))|(D_ViewRuleSpecInfoFlag_VizBlockProd*$(a.vb == "x")), }```;
}

////////////////////////////////
//~ rjf: Developer Toggles

@table(name)
DF_DevToggleTable:
{
  {telemetry_capture}
  {simulate_lag}
  {draw_ui_text_pos}
  {draw_ui_focus_debug}
  {draw_ui_box_heatmap}
  {eval_compiler_tooltips}
  {eval_watch_key_tooltips}
  {cmd_context_tooltips}
  {scratch_mouse_draw}
  {updating_indicator}
}

@gen
{
  @expand(DF_DevToggleTable a) `global B32 DEV_$(a.name) = 0;`
}

@gen
{
  `struct {B32 *value_ptr; String8 name;} DEV_toggle_table[] =`;
  `{`;
    @expand(DF_DevToggleTable a) `{&DEV_$(a.name), str8_lit_comp("$(a.name)")},`
      `};`;
}
